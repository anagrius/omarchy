#!/bin/bash

THEMES_DIR="$HOME/.config/omarchy/themes/"
CURRENT_THEME_DIR="$HOME/.config/omarchy/current/theme"
CURRENT_THEME_NAME=$(basename "$(realpath "$CURRENT_THEME_DIR")")
LOCK_FILE="/tmp/omarchy-theme-menu.lock"

# Check if another instance is already running
if [[ -f "$LOCK_FILE" ]]; then
    # Check if the process is still running
    if kill -0 "$(cat "$LOCK_FILE")" 2>/dev/null; then
        # Dismiss existing wofi window
        pkill wofi 2>/dev/null
        exit 0
    else
        # Remove stale lock file
        rm -f "$LOCK_FILE"
    fi
fi

# Create lock file with current PID
echo $$ > "$LOCK_FILE"

# Cleanup function to remove lock file on exit
cleanup() {
    rm -f "$LOCK_FILE"
}
trap cleanup EXIT INT TERM

# Build themes list with pretty display names
mapfile -t themes < <(
  find "$THEMES_DIR" -mindepth 1 -maxdepth 1 \( -type d -o -type l \) | while read -r path; do
    filename=$(basename "$path")
    display_name=$(echo "$filename" | sed -E 's/(^|-)([a-z])/\1\u\2/g; s/-/ /g')

    if [[ "$filename" == "$CURRENT_THEME_NAME" ]]; then
      echo "<i>$display_name</i>"
    else
      echo "$display_name"
    fi
  done | sort
)

# Show Wofi menu (with markup support)
selection=$(printf '%s\n' "${themes[@]}" | wofi \
  --show dmenu \
  --allow-markup \
  --width 150 \
  --height 300 \
  -O alphabetical \
  --style ~/.local/share/omarchy/default/wofi/select.css)

# Remove any Pango markup before converting back to filename
clean_selection=$(echo "$selection" | sed -E 's/<[^>]+>//g')

# Convert to lowercase and dash-separated: "Tokyo Night" -> "tokyo-night"
selected_theme=$(echo "$clean_selection" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')

# Apply the selected theme
"$HOME/.local/share/omarchy/bin/omarchy-theme-set" "$selected_theme"

